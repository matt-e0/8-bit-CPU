$date
	Sat Aug 16 21:45:17 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_alu $end
$var wire 1 ! z $end
$var wire 8 " y [7:0] $end
$var wire 1 # v $end
$var wire 1 $ n $end
$var wire 1 % c $end
$var wire 1 & bor $end
$var reg 8 ' A [7:0] $end
$var reg 4 ( ALUop [3:0] $end
$var reg 8 ) B [7:0] $end
$var reg 1 * Ext_cin $end
$scope module DUT $end
$var wire 8 + A [7:0] $end
$var wire 4 , ALUop [3:0] $end
$var wire 8 - B [7:0] $end
$var wire 1 * Ext_cin $end
$var wire 1 . add_operation $end
$var wire 1 / sub_operation $end
$var wire 1 ! z $end
$var wire 1 $ n $end
$var wire 1 & bor $end
$var wire 8 0 add_sum [7:0] $end
$var wire 1 1 add_ovf $end
$var wire 1 2 add_cout $end
$var wire 1 3 Cin_eff $end
$var wire 8 4 B_eff [7:0] $end
$var parameter 4 5 ADC $end
$var parameter 4 6 ADD $end
$var parameter 4 7 AND $end
$var parameter 4 8 ASR $end
$var parameter 4 9 LSL $end
$var parameter 4 : LSR $end
$var parameter 4 ; NOT $end
$var parameter 4 < OR $end
$var parameter 4 = PSA $end
$var parameter 4 > PSB $end
$var parameter 4 ? ROL $end
$var parameter 4 @ ROR $end
$var parameter 4 A SBC $end
$var parameter 4 B SUB $end
$var parameter 4 C XOR $end
$var reg 1 % c $end
$var reg 1 # v $end
$var reg 8 D y [7:0] $end
$scope module u_adder $end
$var wire 8 E a [7:0] $end
$var wire 8 F b [7:0] $end
$var wire 1 G c1 $end
$var wire 1 H c2 $end
$var wire 1 I c3 $end
$var wire 1 J c4 $end
$var wire 1 K c5 $end
$var wire 1 L c6 $end
$var wire 1 M c7 $end
$var wire 1 N c8 $end
$var wire 1 3 cin $end
$var wire 1 2 cout $end
$var wire 8 O g [7:0] $end
$var wire 1 1 ovf $end
$var wire 8 P p [7:0] $end
$var wire 8 Q s [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 C
b10 B
b11 A
b1100 @
b1101 ?
b1111 >
b1110 =
b101 <
b111 ;
b1000 :
b1001 9
b1010 8
b100 7
b0 6
b1 5
$end
#0
$dumpvars
b1111 Q
b1111 P
b0 O
0N
0M
0L
0K
0J
0I
0H
0G
b1010 F
b101 E
b1111 D
b1010 4
03
02
01
b1111 0
0/
1.
b1010 -
b0 ,
b101 +
0*
b1010 )
b0 (
b101 '
0&
0%
0$
0#
b1111 "
0!
$end
#10
1%
12
1N
1M
1L
1K
0$
1I
1J
1G
1H
13
b11110101 4
b11110101 F
0&
b101 0
b101 Q
0.
1/
b11111010 P
b101 O
0!
b101 "
b101 D
b10 (
b10 ,
b1111 '
b1111 +
b1111 E
#20
0K
0J
0L
0M
02
0N
0H
0I
03
0G
b1111 4
b1111 F
b11111111 0
b11111111 Q
0/
b11111111 P
b0 O
0%
1!
b0 "
b0 D
b100 (
b100 ,
b1111 )
b1111 -
b11110000 '
b11110000 +
b11110000 E
#30
1$
0!
b11111111 "
b11111111 D
b101 (
b101 ,
#40
0I
0J
0K
0L
0M
02
0N
0H
b11111111 0
b11111111 Q
b1010101 4
b1010101 F
b11111111 P
b0 O
0!
b11111111 "
b11111111 D
b110 (
b110 ,
b1010101 )
b1010101 -
b10101010 '
b10101010 +
b10101010 E
#50
1H
1I
1J
1K
0L
0M
02
0N
1G
b1100100 0
b1100100 Q
b1011010 P
b101 O
0!
b11110000 "
b11110000 D
b111 (
b111 ,
b1111 '
b1111 +
b1111 E
#60
0J
0H
0I
b11100110 0
b11100110 Q
0$
b11000100 P
b10001 O
1%
0!
b1001000 "
b1001000 D
b1000 (
b1000 ,
b10010001 '
b10010001 +
b10010001 E
#70
1%
0!
b100010 "
b100010 D
b1001 (
b1001 ,
#80
